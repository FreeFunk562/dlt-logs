"use strict";(self.webpackChunkdlt_logs=self.webpackChunkdlt_logs||[]).push([[550],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return c}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),d=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=d(e.components);return a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),m=d(n),c=r,f=m["".concat(s,".").concat(c)]||m[c]||p[c]||l;return n?a.createElement(f,i(i({ref:t},u),{},{components:n})):a.createElement(f,i({ref:t},u))}));function c(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var d=2;d<l;d++)i[d]=n[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5162:function(e,t,n){n.d(t,{Z:function(){return i}});var a=n(7294),r=n(4334),l="tabItem_Ymn6";function i(e){var t=e.children,n=e.hidden,i=e.className;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(l,i),hidden:n},t)}},5488:function(e,t,n){n.d(t,{Z:function(){return c}});var a=n(3117),r=n(7294),l=n(4334),i=n(2389),o=n(7392),s=n(7094),d=n(2466),u="tabList__CuJ",p="tabItem_LNqP";function m(e){var t,n,i=e.lazy,m=e.block,c=e.defaultValue,f=e.values,g=e.groupId,h=e.className,v=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),b=null!=f?f:v.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),k=(0,o.l)(b,(function(e,t){return e.value===t.value}));if(k.length>0)throw new Error('Docusaurus error: Duplicate values "'+k.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var y=null===c?c:null!=(t=null!=c?c:null==(n=v.find((function(e){return e.props.default})))?void 0:n.props.value)?t:v[0].props.value;if(null!==y&&!b.some((function(e){return e.value===y})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+y+'" but none of its children has the corresponding value. Available values are: '+b.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var N=(0,s.U)(),w=N.tabGroupChoices,O=N.setTabGroupChoices,P=(0,r.useState)(y),T=P[0],E=P[1],I=[],C=(0,d.o5)().blockElementScrollPositionUntilNextRender;if(null!=g){var S=w[g];null!=S&&S!==T&&b.some((function(e){return e.value===S}))&&E(S)}var x=function(e){var t=e.currentTarget,n=I.indexOf(t),a=b[n].value;a!==T&&(C(t),E(a),null!=g&&O(g,String(a)))},D=function(e){var t,n=null;switch(e.key){case"ArrowRight":var a,r=I.indexOf(e.currentTarget)+1;n=null!=(a=I[r])?a:I[0];break;case"ArrowLeft":var l,i=I.indexOf(e.currentTarget)-1;n=null!=(l=I[i])?l:I[I.length-1]}null==(t=n)||t.focus()};return r.createElement("div",{className:(0,l.Z)("tabs-container",u)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":m},h)},b.map((function(e){var t=e.value,n=e.label,i=e.attributes;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:T===t?0:-1,"aria-selected":T===t,key:t,ref:function(e){return I.push(e)},onKeyDown:D,onFocus:x,onClick:x},i,{className:(0,l.Z)("tabs__item",p,null==i?void 0:i.className,{"tabs__item--active":T===t})}),null!=n?n:t)}))),i?(0,r.cloneElement)(v.filter((function(e){return e.props.value===T}))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},v.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==T})}))))}function c(e){var t=(0,i.Z)();return r.createElement(m,(0,a.Z)({key:String(t)},e))}},9601:function(e,t,n){n.r(t),n.d(t,{assets:function(){return m},contentTitle:function(){return u},default:function(){return g},frontMatter:function(){return d},metadata:function(){return p},toc:function(){return c}});var a=n(3117),r=n(102),l=(n(7294),n(3905)),i=n(5488),o=n(5162),s=["components"],d={id:"someIpPlugin",title:"SOME/IP decoder plugin",sidebar_label:"Plugin SOME/IP decoder"},u=void 0,p={unversionedId:"someIpPlugin",id:"someIpPlugin",title:"SOME/IP decoder plugin",description:"DLT-Logs extension version >= 1.10.0 come with a built-in SOME/IP decoder plugin.",source:"@site/docs/someIpPlugin.md",sourceDirName:".",slug:"/someIpPlugin",permalink:"/dlt-logs/docs/someIpPlugin",draft:!1,editUrl:"https://github.com/mbehr1/dlt-logs/edit/master/docs/dlt-logs/docs/someIpPlugin.md",tags:[],version:"current",frontMatter:{id:"someIpPlugin",title:"SOME/IP decoder plugin",sidebar_label:"Plugin SOME/IP decoder"},sidebar:"dltLogsSideBar",previous:{title:"Plugin File Transfer",permalink:"/dlt-logs/docs/fileTransfer"},next:{title:"Plugin Non-verbose mode",permalink:"/dlt-logs/docs/nonVerbosePlugin"}},m={},c=[{value:"Example",id:"example",level:2},{value:"Explanation",id:"explanation",level:3},{value:"Configuration",id:"configuration",level:2},{value:"Treeview",id:"treeview",level:2},{value:"Encoding of SOME/IP messages in DLT log message",id:"encoding-of-someip-messages-in-dlt-log-message",level:2},{value:"Limitations",id:"limitations",level:2}],f={toc:c};function g(e){var t=e.components,n=(0,r.Z)(e,s);return(0,l.kt)("wrapper",(0,a.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"DLT-Logs extension version >= 1.10.0 come with a built-in SOME/IP decoder plugin."),(0,l.kt)("h2",{id:"example"},"Example"),(0,l.kt)("p",null,"SOME/IP messages will be decoded like this:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'APID TC   ipc      > (632a:0005) ServiceName(0080).set_fieldName_field{"fieldName":field_value}[OK]\n')),(0,l.kt)("h3",{id:"explanation"},"Explanation"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"symbol"),(0,l.kt)("th",{parentName:"tr",align:null},"description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},">")),(0,l.kt)("td",{parentName:"tr",align:null},"SOME/IP request. Other symbols here are ",(0,l.kt)("inlineCode",{parentName:"td"},"<")," for response, ",(0,l.kt)("inlineCode",{parentName:"td"},"*")," for notification or ",(0,l.kt)("inlineCode",{parentName:"td"},"!")," for errors.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"(632a:0005)")),(0,l.kt)("td",{parentName:"tr",align:null},"Client id (here 632a) and session id (here 5) as hex numbers.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"ServiceName")),(0,l.kt)("td",{parentName:"tr",align:null},"Short name of the service decoded.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"(0080)")),(0,l.kt)("td",{parentName:"tr",align:null},"Instance id in hex.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"set_fieldName_field")),(0,l.kt)("td",{parentName:"tr",align:null},"Method or event short name. Here a ",(0,l.kt)("inlineCode",{parentName:"td"},"SETTER")," for field ",(0,l.kt)("inlineCode",{parentName:"td"},"fieldName")," is called.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"{...}")),(0,l.kt)("td",{parentName:"tr",align:null},"Decoded payload of the method. Here ",(0,l.kt)("inlineCode",{parentName:"td"},"fieldName"),"is set to ",(0,l.kt)("inlineCode",{parentName:"td"},"field_value"),".")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"[OK]")),(0,l.kt)("td",{parentName:"tr",align:null},"Return code of the SOME/IP message.")))),(0,l.kt)("h2",{id:"configuration"},"Configuration"),(0,l.kt)("p",null,"You have to configure the SOME/IP plugin. To configure the plugin call"),(0,l.kt)(i.Z,{groupId:"operating-systems",defaultValue:"win",values:[{label:"Windows",value:"win"},{label:"macOS",value:"mac"},{label:"Linux",value:"linux"}],mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"win",mdxType:"TabItem"},'Use F1 or Ctrl+Shift+P and enter/select command "Preferences: Open Settings (JSON)".'),(0,l.kt)(o.Z,{value:"mac",mdxType:"TabItem"},'Use \u21e7\u2318P and enter/select command "Preferences: Open Settings (JSON)".'),(0,l.kt)(o.Z,{value:"linux",mdxType:"TabItem"},'Use Ctrl+Shift+P and enter/select command "Preferences: Open Settings (JSON)".')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsonc"},'"dlt-logs.plugins": [\n        {\n            "name":"SomeIp",\n            "enabled": true, // you can set it to false to disable the plugin\n            "fibexDir": "/home/...", // or "c:\\\\...". Set it to the folder containing your FIBEX files.\n            "ctid": "TC", // optional ctid. Defaults to "TC" if not set\n            "mtin": 1 // optional MTIN. Defaults to MTIN_NW_TRACE (1) if not set\n        },\n        {\n            "name": "FileTransfer", // config for file transfer plugin...\n            ...\n        },\n    ],\n')),(0,l.kt)("admonition",{type:"note"},(0,l.kt)("p",{parentName:"admonition"},"The ",(0,l.kt)("inlineCode",{parentName:"p"},"fibexDir")," needs to point to a folder containing the FIBEX files with extension .xml.\nPlease keep the files uncompressed (no .zip, no .tgz) there.")),(0,l.kt)("admonition",{type:"note"},(0,l.kt)("p",{parentName:"admonition"},"You can keep multiple files in the folder. They will be sorted in descending order alphabetically first before loading. So if you have multiple files e.g. with a SW revision as part of the file name the one with the latest SW revision will be loaded first. This is important as on loading further files only new services/methods will be added. So the files loaded first determine the version used.\nAnyhow please dont keep files from older versions as opening and parsing them takes CPU time!")),(0,l.kt)("admonition",{type:"note"},(0,l.kt)("p",{parentName:"admonition"},"If you changed the content of the folder for now you do need to open a new file or use ",(0,l.kt)("inlineCode",{parentName:"p"},"Developer: Reload window")," to reload the window incl. the extension host.")),(0,l.kt)("h2",{id:"treeview"},"Treeview"),(0,l.kt)("p",null,"In the tree-view you'll find more information about the loaded service and methods under"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"Plugins\n|- SOME/IP Decoder\n   |- Services (<number of services loaded>)\n      | - <list of all loaded services with short name and version>\n          | - <list of all methods for each service with short name >\n   | - Datatypes (<number of datatypes loaded>)\n   | - Codings (<number of (en-)codings for datatypes loaded>)\n")),(0,l.kt)("admonition",{type:"note"},(0,l.kt)("p",{parentName:"admonition"},"The tooltip of each item contains more info e.g. the description (if available in the FIBEX).")),(0,l.kt)("p",null,"(todo add picture)"),(0,l.kt)("h2",{id:"encoding-of-someip-messages-in-dlt-log-message"},"Encoding of SOME/IP messages in DLT log message"),(0,l.kt)("p",null,"The decoder assumes that the message is encoded as type ",(0,l.kt)("inlineCode",{parentName:"p"},"NW_TRACE")," with the configured ",(0,l.kt)("inlineCode",{parentName:"p"},"MTIN")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"CTID"),".See ",(0,l.kt)("a",{parentName:"p",href:"#configuration"},"Configuration"),". The SOME/IP message itself is encoded as two raw message payloads:"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"4 bytes with the IPv4 address, 2 bytes with the udp/tcp, 1 byte protocol (0 = local, 1 = tcp, 2 = udp), 1 byte indicating incoming or outgoing message and 1,2 or 4 bytes encoded instance ID."),(0,l.kt)("li",{parentName:"ol"},"SOME/IP header (16 bytes) and payload")),(0,l.kt)("h2",{id:"limitations"},"Limitations"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Currently all payloads are expected to be big-endian even if the FIBEX files defines something else! If you need support for little-endian please raise an issue in github."),(0,l.kt)("li",{parentName:"ul"},"Currently not supported are:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"UNIONs are not supported yet."),(0,l.kt)("li",{parentName:"ul"},"Booleans as payload are not supported yet."),(0,l.kt)("li",{parentName:"ul"},"Segmented messages are not supported.")))))}g.isMDXComponent=!0}}]);